name: Build And Deploy Athena Service

on:
  pull_request:
    types: [closed]
    branches:
      - dev
  workflow_dispatch:

jobs:
  build:
    name: Build Docker Image
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set IMAGE_TAG
        run: echo "IMAGE_TAG=dev" >> $GITHUB_ENV

      - name: Create .env file
        run: |
          cat <<EOF > infra/docker/.env
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          DATABASE_DRIVER=${{ secrets.DATABASE_DRIVER }}
          KAKAO_API_CID=${{ secrets.KAKAO_API_CID }}
          KAKAO_API_ADMIN_KEY=${{ secrets.KAKAO_API_ADMIN_KEY }}
          KAKAO_API_APPROVAL_URL=${{ secrets.KAKAO_API_APPROVAL_URL }}
          KAKAO_API_CANCEL_URL=${{ secrets.KAKAO_API_CANCEL_URL }}
          KAKAO_API_FAIL_URL=${{ secrets.KAKAO_API_FAIL_URL }}
          JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          JWT_REFRESH_KEY=${{ secrets.JWT_REFRESH_KEY }}
          ACCESS_KEY=${{ secrets.ACCESS_KEY }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          BUCKET_NAME=${{ secrets.BUCKET_NAME }}
          EOF

      - name: Build via Docker Compose
        run: |
          cd infra/docker
          docker compose --env-file .env build --no-cache
          docker tag athena:latest athena:${{ env.IMAGE_TAG }}
          
  deploy:
    name: Deploy Athena Service
    runs-on: self-hosted
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Ensure IMAGE_TAG is set
        run: echo "IMAGE_TAG=dev" >> $GITHUB_ENV

      - name: Create .env file
        run: |
          cat <<EOF > infra/docker/.env
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
          DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          DATABASE_DRIVER=${{ secrets.DATABASE_DRIVER }}
          KAKAO_API_CID=${{ secrets.KAKAO_API_CID }}
          KAKAO_API_ADMIN_KEY=${{ secrets.KAKAO_API_ADMIN_KEY }}
          KAKAO_API_APPROVAL_URL=${{ secrets.KAKAO_API_APPROVAL_URL }}
          KAKAO_API_CANCEL_URL=${{ secrets.KAKAO_API_CANCEL_URL }}
          KAKAO_API_FAIL_URL=${{ secrets.KAKAO_API_FAIL_URL }}
          JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
          JWT_REFRESH_KEY=${{ secrets.JWT_REFRESH_KEY }}
          ACCESS_KEY=${{ secrets.ACCESS_KEY }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          BUCKET_NAME=${{ secrets.BUCKET_NAME }}
          EOF

      - name: Bring up athena container
        run: |
          cd infra/docker

          # 이미 가동중인 컨테이너가 있다면 중지
          docker compose rm -f athena

          # dev 태그로 빌드된 athena 이미지를 서비스로 기동
          docker compose --env-file .env up -d athena

      - name: Verify service health
        run: |
          # 간단히 컨테이너 상태 확인
          docker ps --filter "name=athena" --format "table {{.Names}}\t{{.Status}}"
