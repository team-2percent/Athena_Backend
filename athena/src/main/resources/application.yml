spring:

  application:
    name: athena

  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 50MB

  config:
    import: optional:file:.env[.properties]

  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: ${DATABASE_DRIVER}

  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        jdbc:
          default_batch_fetch_size: 100
        order_inserts: true
        order_updates: true


  kakao:
    api:
      base-url: "http://localhost:8081/kakao"
      cid: ${KAKAO_API_CID}
      admin-key: ${KAKAO_API_ADMIN_KEY}
      approval-url: ${KAKAO_API_APPROVAL_URL}
      cancel-url: ${KAKAO_API_CANCEL_URL}
      fail-url: ${KAKAO_API_FAIL_URL}

  server:
    forward-headers-strategy: framework

cloud:
  aws:
    credentials:
      access-key: ${ACCESS_KEY}
      secret-key: ${SECRET_KEY}
    s3:
      bucket: ${BUCKET_NAME}
    region:
      static: ap-northeast-2
    stack:
      auto: false
logging:
  level:
    p6spy: info

decorator:
  datasource:
    p6spy:
      enable-logging: true
jwt:
  secretKey: ${JWT_SECRET_KEY}
  refreshKey: ${JWT_REFRESH_KEY}

image:
  server:
    url: ${IMAGE_SERVER_URL}


fcm:
  certification: ${FCM_CERTIFICATION}

firebase:
  projectId: ${FIREBASE_PROJECT_ID}
  privateKeyId: ${FIREBASE_PRIVATE_KEY_ID}
  privateKey: ${FIREBASE_PRIVATE_KEY}
  clientEmail: ${FIREBASE_CLIENT_EMAIL}
  clientId: ${FIREBASE_CLIENT_ID}
  clientX509CertUrl: ${FIREBASE_CLIENT_X509_CERT_URL}

#otel:
#  exporter:
#    otlp:
#      protocol : grpc
#      endpoint: http://localhost:4317
#  traces:
#    exporter: jaeger
#  logs:
#    exporter: none
#  metrics:
#    exporter: none

---

spring:
  sql:
    init:
      mode: always
  config:
    activate:
      on-profile: test

  datasource:
    url:  jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver
    username: sa
    password:
    hikari:
      maximum-pool-size: 30     # 동시에 유지 가능한 최대 커넥션 수
      minimum-idle: 10          # 최소 idle 수 (너무 적으면 예열에 시간 소모)
      idle-timeout: 30000       # 유휴 커넥션 유지 시간 (30초)
      max-lifetime: 1800000     # 커넥션 최대 수명 (30분)
      connection-timeout: 3000  # 커넥션 요청 timeout (3초)
  h2:
    console:
      enabled: true
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.H2Dialect
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  defer-datasource-initialization: true
  generate-ddl: true
  redis:
    host: localhost
    port: 6379

redisson:
  config: |
    singleServerConfig:
    address: "redis://localhost:6379"
logging:
  level:
    org.springframework.jdbc.datasource.init: DEBUG

---

